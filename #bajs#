void addChildBefore(struct treeNode* node, struct treeNode* child, struct treeNode* before) {
    node->childCount++;
    struct treeListNode* currnode = node->children;
    while(currnode->next != NULL && (clang_equalCursors(currnode->next->node->cursor, before->cursor) == 0)) {
        currnode = currnode->next;
    }
    if(child->modified != 0) {
        node->modified++;
        struct treeNode* currnode2 = node;
        while(currnode2->parent != NULL) {
	    currnode2 = currnode2->parent;
	    currnode2->modified++;
	    addModified(currnode2, child);
	}
	currnode2->modified++;
	addModified(currnode2, child);
    }
    struct treeListNode* newnode = malloc(sizeof(struct treeListNode));
    newnode->node = child;
    newnode->next = currnode->next->next;
    currnode->next->next = newnode;
    child->parent = node;
    CXSourceRange range = clang_getCursorExtent(currnode->node->cursor);
    CXSourceLocation rend = clang_getRangeEnd(range);
    clang_getFileLocation(rend, NULL, &(child->startline), &(child->startcol), NULL);
}
