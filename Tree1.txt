CXCursor_TranslationUnit([300]): "Test1.c"; Test1.c (L1:C1-L63:C1), containing 287 tokens (# include < pthread . h > # include < semaphore . h > # include < stdio . h > # include < stdlib . h > typedef struct { pthread_mutex_t lock ; int value ; } SharedInt ; struct SharedInt2 { pthread_mutex_t lock ; int value ; } ; typedef struct SharedInt2 * SharedInt3 ; _Thread_local int poop = 0 ; sem_t sem ; SharedInt * sip ; struct SharedInt2 * sip2 ; void * functionWithCriticalSection ( int * v2 ) { // Do some work pthread_mutex_lock ( & ( sip -> lock ) ) ; sip -> value = sip -> value + * v2 ; poop = 1 ; sip2 -> value = sip2 -> value + 1 ; pthread_mutex_unlock ( & ( sip -> lock ) ) ; // Do some more work sem_post ( & sem ) ; nob ( ) ; //return poop + sip->value; return poop + 7 ; } struct SharedInt2 * nob ( ) { //nob } int main ( ) { poop = 0 ; sem_init ( & sem , 0 , 0 ) ; SharedInt si ; sip = & si ; sip -> value = 0 ; sip2 -> value = 0 ; int v2 = 1 ; pthread_mutex_init ( & ( sip -> lock ) , NULL ) ; pthread_t thread1 ; pthread_t thread2 ; pthread_create ( & thread1 , NULL , functionWithCriticalSection , & v2 ) ; pthread_create ( & thread2 , NULL , functionWithCriticalSection , & v2 ) ; sem_wait ( & sem ) ; sem_wait ( & sem ) ; pthread_mutex_destroy ( & ( sip -> lock ) ) ; sem_destroy ( & sem ) ; printf ( "%d\n" , sip -> value ) ; // Should print "2". return 0 ; } )->
  CXCursor_InclusionDirective([503]): "pthread.h"; pthread.h (L1:C1-L1:C21), containing 8 tokens (# include < pthread . h > # )
  CXCursor_InclusionDirective([503]): "semaphore.h"; semaphore.h (L2:C1-L2:C23), containing 8 tokens (# include < semaphore . h > # )
  CXCursor_InclusionDirective([503]): "stdio.h"; stdio.h (L3:C1-L3:C19), containing 8 tokens (# include < stdio . h > # )
  CXCursor_InclusionDirective([503]): "stdlib.h"; stdlib.h (L4:C1-L4:C20), containing 8 tokens (# include < stdlib . h > typedef )
  CXCursor_MacroExpansion([502]): "NULL"; NULL (L51:C38-L51:C42), containing 2 tokens (NULL ) )
  CXCursor_MacroExpansion([502]): "NULL"; NULL (L54:C30-L54:C34), containing 2 tokens (NULL , )
  CXCursor_MacroExpansion([502]): "NULL"; NULL (L55:C30-L55:C34), containing 2 tokens (NULL , )
  CXCursor_StructDecl([2]):SharedInt "";  (L6:C9-L9:C2), containing 10 tokens (struct { pthread_mutex_t lock ; int value ; } SharedInt )->
    CXCursor_FieldDecl([6]):pthread_mutex_t "lock"; lock (L7:C5-L7:C25), containing 3 tokens (pthread_mutex_t lock ; )->
      CXCursor_TypeRef([43]):pthread_mutex_t "pthread_mutex_t"; pthread_mutex_t (L7:C5-L7:C20), containing 2 tokens (pthread_mutex_t lock )
    CXCursor_FieldDecl([6]):int "value"; value (L8:C5-L8:C14), containing 3 tokens (int value ; )
  CXCursor_TypedefDecl([20]):SharedInt "SharedInt"; SharedInt (L6:C1-L9:C11), containing 12 tokens (typedef struct { pthread_mutex_t lock ; int value ; } SharedInt ; )->
    CXCursor_StructDecl([2]):SharedInt "";  (L6:C9-L9:C2), containing 10 tokens (struct { pthread_mutex_t lock ; int value ; } SharedInt )->
      CXCursor_FieldDecl([6]):pthread_mutex_t "lock"; lock (L7:C5-L7:C25), containing 3 tokens (pthread_mutex_t lock ; )->
        CXCursor_TypeRef([43]):pthread_mutex_t "pthread_mutex_t"; pthread_mutex_t (L7:C5-L7:C20), containing 2 tokens (pthread_mutex_t lock )
      CXCursor_FieldDecl([6]):int "value"; value (L8:C5-L8:C14), containing 3 tokens (int value ; )
  CXCursor_StructDecl([2]):struct SharedInt2 "SharedInt2"; SharedInt2 (L11:C1-L14:C2), containing 11 tokens (struct SharedInt2 { pthread_mutex_t lock ; int value ; } ; )->
    CXCursor_FieldDecl([6]):pthread_mutex_t "lock"; lock (L12:C5-L12:C25), containing 3 tokens (pthread_mutex_t lock ; )->
      CXCursor_TypeRef([43]):pthread_mutex_t "pthread_mutex_t"; pthread_mutex_t (L12:C5-L12:C20), containing 2 tokens (pthread_mutex_t lock )
    CXCursor_FieldDecl([6]):int "value"; value (L13:C5-L13:C14), containing 3 tokens (int value ; )
  CXCursor_TypedefDecl([20]):SharedInt3 "SharedInt3"; SharedInt3 (L16:C1-L16:C38), containing 6 tokens (typedef struct SharedInt2 * SharedInt3 ; )->
    CXCursor_TypeRef([43]):struct SharedInt2 "struct SharedInt2"; struct SharedInt2 (L16:C16-L16:C26), containing 2 tokens (SharedInt2 * )
  CXCursor_VarDecl([9]):int "poop"; poop (L18:C1-L18:C27), containing 6 tokens (_Thread_local int poop = 0 ; )->
    CXCursor_IntegerLiteral([106]):int "";  (L18:C26-L18:C27), containing 2 tokens (0 ; )
  CXCursor_VarDecl([9]):sem_t "sem"; sem (L20:C1-L20:C10), containing 3 tokens (sem_t sem ; )->
    CXCursor_TypeRef([43]):sem_t "sem_t"; sem_t (L20:C1-L20:C6), containing 2 tokens (sem_t sem )
  CXCursor_VarDecl([9]):SharedInt * "sip"; sip (L21:C1-L21:C15), containing 4 tokens (SharedInt * sip ; )->
    CXCursor_TypeRef([43]):SharedInt "SharedInt"; SharedInt (L21:C1-L21:C10), containing 2 tokens (SharedInt * )
  CXCursor_VarDecl([9]):struct SharedInt2 * "sip2"; sip2 (L23:C1-L23:C24), containing 5 tokens (struct SharedInt2 * sip2 ; )->
    CXCursor_TypeRef([43]):struct SharedInt2 "struct SharedInt2"; struct SharedInt2 (L23:C8-L23:C18), containing 2 tokens (SharedInt2 * )
  CXCursor_FunctionDecl([8]):void *(int *) "functionWithCriticalSection(int *)"; functionWithCriticalSection (L25:C1-L37:C2), containing 74 tokens (void * functionWithCriticalSection ( int * v2 ) { // Do some work pthread_mutex_lock ( & ( sip -> lock ) ) ; sip -> value = sip -> value + * v2 ; poop = 1 ; sip2 -> value = sip2 -> value + 1 ; pthread_mutex_unlock ( & ( sip -> lock ) ) ; // Do some more work sem_post ( & sem ) ; nob ( ) ; //return poop + sip->value; return poop + 7 ; } struct )->
    CXCursor_ParmDecl([10]):int * "v2"; v2 (L25:C35-L25:C42), containing 4 tokens (int * v2 ) )
    CXCursor_CompoundStmt([202]): "";  (L25:C44-L37:C2), containing 66 tokens ({ // Do some work pthread_mutex_lock ( & ( sip -> lock ) ) ; sip -> value = sip -> value + * v2 ; poop = 1 ; sip2 -> value = sip2 -> value + 1 ; pthread_mutex_unlock ( & ( sip -> lock ) ) ; // Do some more work sem_post ( & sem ) ; nob ( ) ; //return poop + sip->value; return poop + 7 ; } struct )->
      CXCursor_CallExpr([103]):int "pthread_mutex_lock"; pthread_mutex_lock (L27:C5-L27:C37), containing 10 tokens (pthread_mutex_lock ( & ( sip -> lock ) ) ; )->
        CXCursor_UnexposedExpr([100]):int (*)(pthread_mutex_t *) "pthread_mutex_lock"; pthread_mutex_lock (L27:C5-L27:C23), containing 2 tokens (pthread_mutex_lock ( )->
          CXCursor_DeclRefExpr([101]):int (pthread_mutex_t *) "pthread_mutex_lock"; pthread_mutex_lock (L27:C5-L27:C23), containing 2 tokens (pthread_mutex_lock ( )
        CXCursor_UnaryOperator([112]):pthread_mutex_t * "";  (L27:C24-L27:C36), containing 7 tokens (& ( sip -> lock ) ) )->
          CXCursor_ParenExpr([111]):pthread_mutex_t "";  (L27:C25-L27:C36), containing 6 tokens (( sip -> lock ) ) )->
            CXCursor_MemberRefExpr([102]):pthread_mutex_t "lock"; lock (L27:C26-L27:C35), containing 4 tokens (sip -> lock ) )->
              CXCursor_UnexposedExpr([100]):SharedInt * "sip"; sip (L27:C26-L27:C29), containing 2 tokens (sip -> )->
                CXCursor_DeclRefExpr([101]):SharedInt * "sip"; sip (L27:C26-L27:C29), containing 2 tokens (sip -> )
      CXCursor_BinaryOperator([114]):int "";  (L28:C5-L28:C34), containing 11 tokens (sip -> value = sip -> value + * v2 ; )->
        CXCursor_MemberRefExpr([102]):int "value"; value (L28:C5-L28:C15), containing 4 tokens (sip -> value = )->
          CXCursor_UnexposedExpr([100]):SharedInt * "sip"; sip (L28:C5-L28:C8), containing 2 tokens (sip -> )->
            CXCursor_DeclRefExpr([101]):SharedInt * "sip"; sip (L28:C5-L28:C8), containing 2 tokens (sip -> )
        CXCursor_BinaryOperator([114]):int "";  (L28:C18-L28:C34), containing 7 tokens (sip -> value + * v2 ; )->
          CXCursor_UnexposedExpr([100]):int "value"; value (L28:C18-L28:C28), containing 4 tokens (sip -> value + )->
            CXCursor_MemberRefExpr([102]):int "value"; value (L28:C18-L28:C28), containing 4 tokens (sip -> value + )->
              CXCursor_UnexposedExpr([100]):SharedInt * "sip"; sip (L28:C18-L28:C21), containing 2 tokens (sip -> )->
                CXCursor_DeclRefExpr([101]):SharedInt * "sip"; sip (L28:C18-L28:C21), containing 2 tokens (sip -> )
          CXCursor_UnexposedExpr([100]):int "";  (L28:C31-L28:C34), containing 3 tokens (* v2 ; )->
            CXCursor_UnaryOperator([112]):int "";  (L28:C31-L28:C34), containing 3 tokens (* v2 ; )->
              CXCursor_UnexposedExpr([100]):int * "v2"; v2 (L28:C32-L28:C34), containing 2 tokens (v2 ; )->
                CXCursor_DeclRefExpr([101]):int * "v2"; v2 (L28:C32-L28:C34), containing 2 tokens (v2 ; )
      CXCursor_BinaryOperator([114]):int "";  (L29:C5-L29:C13), containing 4 tokens (poop = 1 ; )->
        CXCursor_DeclRefExpr([101]):int "poop"; poop (L29:C5-L29:C9), containing 2 tokens (poop = )
        CXCursor_IntegerLiteral([106]):int "";  (L29:C12-L29:C13), containing 2 tokens (1 ; )
      CXCursor_BinaryOperator([114]):int "";  (L30:C5-L30:C34), containing 10 tokens (sip2 -> value = sip2 -> value + 1 ; )->
        CXCursor_MemberRefExpr([102]):int "value"; value (L30:C5-L30:C16), containing 4 tokens (sip2 -> value = )->
          CXCursor_UnexposedExpr([100]):struct SharedInt2 * "sip2"; sip2 (L30:C5-L30:C9), containing 2 tokens (sip2 -> )->
            CXCursor_DeclRefExpr([101]):struct SharedInt2 * "sip2"; sip2 (L30:C5-L30:C9), containing 2 tokens (sip2 -> )
        CXCursor_BinaryOperator([114]):int "";  (L30:C19-L30:C34), containing 6 tokens (sip2 -> value + 1 ; )->
          CXCursor_UnexposedExpr([100]):int "value"; value (L30:C19-L30:C30), containing 4 tokens (sip2 -> value + )->
            CXCursor_MemberRefExpr([102]):int "value"; value (L30:C19-L30:C30), containing 4 tokens (sip2 -> value + )->
              CXCursor_UnexposedExpr([100]):struct SharedInt2 * "sip2"; sip2 (L30:C19-L30:C23), containing 2 tokens (sip2 -> )->
                CXCursor_DeclRefExpr([101]):struct SharedInt2 * "sip2"; sip2 (L30:C19-L30:C23), containing 2 tokens (sip2 -> )
          CXCursor_IntegerLiteral([106]):int "";  (L30:C33-L30:C34), containing 2 tokens (1 ; )
      CXCursor_CallExpr([103]):int "pthread_mutex_unlock"; pthread_mutex_unlock (L31:C5-L31:C39), containing 10 tokens (pthread_mutex_unlock ( & ( sip -> lock ) ) ; )->
        CXCursor_UnexposedExpr([100]):int (*)(pthread_mutex_t *) "pthread_mutex_unlock"; pthread_mutex_unlock (L31:C5-L31:C25), containing 2 tokens (pthread_mutex_unlock ( )->
          CXCursor_DeclRefExpr([101]):int (pthread_mutex_t *) "pthread_mutex_unlock"; pthread_mutex_unlock (L31:C5-L31:C25), containing 2 tokens (pthread_mutex_unlock ( )
        CXCursor_UnaryOperator([112]):pthread_mutex_t * "";  (L31:C26-L31:C38), containing 7 tokens (& ( sip -> lock ) ) )->
          CXCursor_ParenExpr([111]):pthread_mutex_t "";  (L31:C27-L31:C38), containing 6 tokens (( sip -> lock ) ) )->
            CXCursor_MemberRefExpr([102]):pthread_mutex_t "lock"; lock (L31:C28-L31:C37), containing 4 tokens (sip -> lock ) )->
              CXCursor_UnexposedExpr([100]):SharedInt * "sip"; sip (L31:C28-L31:C31), containing 2 tokens (sip -> )->
                CXCursor_DeclRefExpr([101]):SharedInt * "sip"; sip (L31:C28-L31:C31), containing 2 tokens (sip -> )
      CXCursor_CallExpr([103]):int "sem_post"; sem_post (L33:C5-L33:C19), containing 6 tokens (sem_post ( & sem ) ; )->
        CXCursor_UnexposedExpr([100]):int (*)(sem_t *) "sem_post"; sem_post (L33:C5-L33:C13), containing 2 tokens (sem_post ( )->
          CXCursor_DeclRefExpr([101]):int (sem_t *) "sem_post"; sem_post (L33:C5-L33:C13), containing 2 tokens (sem_post ( )
        CXCursor_UnaryOperator([112]):sem_t * "";  (L33:C14-L33:C18), containing 3 tokens (& sem ) )->
          CXCursor_DeclRefExpr([101]):sem_t "sem"; sem (L33:C15-L33:C18), containing 2 tokens (sem ) )
      CXCursor_CallExpr([103]):int "nob"; nob (L34:C5-L34:C10), containing 4 tokens (nob ( ) ; )->
        CXCursor_UnexposedExpr([100]):int (*)() "nob"; nob (L34:C5-L34:C8), containing 2 tokens (nob ( )->
          CXCursor_DeclRefExpr([101]):int () "nob"; nob (L34:C5-L34:C8), containing 2 tokens (nob ( )
      CXCursor_ReturnStmt([214]): "";  (L36:C5-L36:C20), containing 5 tokens (return poop + 7 ; )->
        CXCursor_UnexposedExpr([100]):void * "";  (L36:C12-L36:C20), containing 4 tokens (poop + 7 ; )->
          CXCursor_BinaryOperator([114]):int "";  (L36:C12-L36:C20), containing 4 tokens (poop + 7 ; )->
            CXCursor_UnexposedExpr([100]):int "poop"; poop (L36:C12-L36:C16), containing 2 tokens (poop + )->
              CXCursor_DeclRefExpr([101]):int "poop"; poop (L36:C12-L36:C16), containing 2 tokens (poop + )
            CXCursor_IntegerLiteral([106]):int "";  (L36:C19-L36:C20), containing 2 tokens (7 ; )
  CXCursor_FunctionDecl([8]):struct SharedInt2 *() "nob()"; nob (L39:C1-L41:C2), containing 10 tokens (struct SharedInt2 * nob ( ) { //nob } int )->
    CXCursor_TypeRef([43]):struct SharedInt2 "struct SharedInt2"; struct SharedInt2 (L39:C8-L39:C18), containing 2 tokens (SharedInt2 * )
    CXCursor_CompoundStmt([202]): "";  (L39:C26-L41:C2), containing 4 tokens ({ //nob } int )
  CXCursor_FunctionDecl([8]):int () "main()"; main (L43:C1-L62:C2), containing 130 tokens (int main ( ) { poop = 0 ; sem_init ( & sem , 0 , 0 ) ; SharedInt si ; sip = & si ; sip -> value = 0 ; sip2 -> value = 0 ; int v2 = 1 ; pthread_mutex_init ( & ( sip -> lock ) , NULL ) ; pthread_t thread1 ; pthread_t thread2 ; pthread_create ( & thread1 , NULL , functionWithCriticalSection , & v2 ) ; pthread_create ( & thread2 , NULL , functionWithCriticalSection , & v2 ) ; sem_wait ( & sem ) ; sem_wait ( & sem ) ; pthread_mutex_destroy ( & ( sip -> lock ) ) ; sem_destroy ( & sem ) ; printf ( "%d\n" , sip -> value ) ; // Should print "2". return 0 ; } )->
    CXCursor_CompoundStmt([202]): "";  (L43:C12-L62:C2), containing 126 tokens ({ poop = 0 ; sem_init ( & sem , 0 , 0 ) ; SharedInt si ; sip = & si ; sip -> value = 0 ; sip2 -> value = 0 ; int v2 = 1 ; pthread_mutex_init ( & ( sip -> lock ) , NULL ) ; pthread_t thread1 ; pthread_t thread2 ; pthread_create ( & thread1 , NULL , functionWithCriticalSection , & v2 ) ; pthread_create ( & thread2 , NULL , functionWithCriticalSection , & v2 ) ; sem_wait ( & sem ) ; sem_wait ( & sem ) ; pthread_mutex_destroy ( & ( sip -> lock ) ) ; sem_destroy ( & sem ) ; printf ( "%d\n" , sip -> value ) ; // Should print "2". return 0 ; } )->
      CXCursor_BinaryOperator([114]):int "";  (L44:C5-L44:C13), containing 4 tokens (poop = 0 ; )->
        CXCursor_DeclRefExpr([101]):int "poop"; poop (L44:C5-L44:C9), containing 2 tokens (poop = )
        CXCursor_IntegerLiteral([106]):int "";  (L44:C12-L44:C13), containing 2 tokens (0 ; )
      CXCursor_CallExpr([103]):int "sem_init"; sem_init (L45:C5-L45:C25), containing 10 tokens (sem_init ( & sem , 0 , 0 ) ; )->
        CXCursor_UnexposedExpr([100]):int (*)(sem_t *, int, unsigned int) "sem_init"; sem_init (L45:C5-L45:C13), containing 2 tokens (sem_init ( )->
          CXCursor_DeclRefExpr([101]):int (sem_t *, int, unsigned int) "sem_init"; sem_init (L45:C5-L45:C13), containing 2 tokens (sem_init ( )
        CXCursor_UnaryOperator([112]):sem_t * "";  (L45:C14-L45:C18), containing 3 tokens (& sem , )->
          CXCursor_DeclRefExpr([101]):sem_t "sem"; sem (L45:C15-L45:C18), containing 2 tokens (sem , )
        CXCursor_IntegerLiteral([106]):int "";  (L45:C20-L45:C21), containing 2 tokens (0 , )
        CXCursor_UnexposedExpr([100]):unsigned int "";  (L45:C23-L45:C24), containing 2 tokens (0 ) )->
          CXCursor_IntegerLiteral([106]):int "";  (L45:C23-L45:C24), containing 2 tokens (0 ) )
      CXCursor_DeclStmt([231]): "";  (L46:C5-L46:C18), containing 4 tokens (SharedInt si ; sip )->
        CXCursor_VarDecl([9]):SharedInt "si"; si (L46:C5-L46:C17), containing 3 tokens (SharedInt si ; )->
          CXCursor_TypeRef([43]):SharedInt "SharedInt"; SharedInt (L46:C5-L46:C14), containing 2 tokens (SharedInt si )
      CXCursor_BinaryOperator([114]):SharedInt * "";  (L47:C5-L47:C14), containing 5 tokens (sip = & si ; )->
        CXCursor_DeclRefExpr([101]):SharedInt * "sip"; sip (L47:C5-L47:C8), containing 2 tokens (sip = )
        CXCursor_UnaryOperator([112]):SharedInt * "";  (L47:C11-L47:C14), containing 3 tokens (& si ; )->
          CXCursor_DeclRefExpr([101]):SharedInt "si"; si (L47:C12-L47:C14), containing 2 tokens (si ; )
      CXCursor_BinaryOperator([114]):int "";  (L48:C5-L48:C19), containing 6 tokens (sip -> value = 0 ; )->
        CXCursor_MemberRefExpr([102]):int "value"; value (L48:C5-L48:C15), containing 4 tokens (sip -> value = )->
          CXCursor_UnexposedExpr([100]):SharedInt * "sip"; sip (L48:C5-L48:C8), containing 2 tokens (sip -> )->
            CXCursor_DeclRefExpr([101]):SharedInt * "sip"; sip (L48:C5-L48:C8), containing 2 tokens (sip -> )
        CXCursor_IntegerLiteral([106]):int "";  (L48:C18-L48:C19), containing 2 tokens (0 ; )
      CXCursor_BinaryOperator([114]):int "";  (L49:C5-L49:C20), containing 6 tokens (sip2 -> value = 0 ; )->
        CXCursor_MemberRefExpr([102]):int "value"; value (L49:C5-L49:C16), containing 4 tokens (sip2 -> value = )->
          CXCursor_UnexposedExpr([100]):struct SharedInt2 * "sip2"; sip2 (L49:C5-L49:C9), containing 2 tokens (sip2 -> )->
            CXCursor_DeclRefExpr([101]):struct SharedInt2 * "sip2"; sip2 (L49:C5-L49:C9), containing 2 tokens (sip2 -> )
        CXCursor_IntegerLiteral([106]):int "";  (L49:C19-L49:C20), containing 2 tokens (0 ; )
      CXCursor_DeclStmt([231]): "";  (L50:C5-L50:C16), containing 6 tokens (int v2 = 1 ; pthread_mutex_init )->
        CXCursor_VarDecl([9]):int "v2"; v2 (L50:C5-L50:C15), containing 5 tokens (int v2 = 1 ; )->
          CXCursor_IntegerLiteral([106]):int "";  (L50:C14-L50:C15), containing 2 tokens (1 ; )
      CXCursor_CallExpr([103]):int "pthread_mutex_init"; pthread_mutex_init (L51:C5-L51:C43), containing 12 tokens (pthread_mutex_init ( & ( sip -> lock ) , NULL ) ; )->
        CXCursor_UnexposedExpr([100]):int (*)(pthread_mutex_t *, const pthread_mutexattr_t *) "pthread_mutex_init"; pthread_mutex_init (L51:C5-L51:C23), containing 2 tokens (pthread_mutex_init ( )->
          CXCursor_DeclRefExpr([101]):int (pthread_mutex_t *, const pthread_mutexattr_t *) "pthread_mutex_init"; pthread_mutex_init (L51:C5-L51:C23), containing 2 tokens (pthread_mutex_init ( )
        CXCursor_UnaryOperator([112]):pthread_mutex_t * "";  (L51:C24-L51:C36), containing 7 tokens (& ( sip -> lock ) , )->
          CXCursor_ParenExpr([111]):pthread_mutex_t "";  (L51:C25-L51:C36), containing 6 tokens (( sip -> lock ) , )->
            CXCursor_MemberRefExpr([102]):pthread_mutex_t "lock"; lock (L51:C26-L51:C35), containing 4 tokens (sip -> lock ) )->
              CXCursor_UnexposedExpr([100]):SharedInt * "sip"; sip (L51:C26-L51:C29), containing 2 tokens (sip -> )->
                CXCursor_DeclRefExpr([101]):SharedInt * "sip"; sip (L51:C26-L51:C29), containing 2 tokens (sip -> )
      CXCursor_DeclStmt([231]): "";  (L52:C5-L52:C23), containing 4 tokens (pthread_t thread1 ; pthread_t )->
        CXCursor_VarDecl([9]):pthread_t "thread1"; thread1 (L52:C5-L52:C22), containing 3 tokens (pthread_t thread1 ; )->
          CXCursor_TypeRef([43]):pthread_t "pthread_t"; pthread_t (L52:C5-L52:C14), containing 2 tokens (pthread_t thread1 )
      CXCursor_DeclStmt([231]): "";  (L53:C5-L53:C23), containing 4 tokens (pthread_t thread2 ; pthread_create )->
        CXCursor_VarDecl([9]):pthread_t "thread2"; thread2 (L53:C5-L53:C22), containing 3 tokens (pthread_t thread2 ; )->
          CXCursor_TypeRef([43]):pthread_t "pthread_t"; pthread_t (L53:C5-L53:C14), containing 2 tokens (pthread_t thread2 )
      CXCursor_CallExpr([103]):int "pthread_create"; pthread_create (L54:C5-L54:C67), containing 13 tokens (pthread_create ( & thread1 , NULL , functionWithCriticalSection , & v2 ) ; )->
        CXCursor_UnexposedExpr([100]):int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) "pthread_create"; pthread_create (L54:C5-L54:C19), containing 2 tokens (pthread_create ( )->
          CXCursor_DeclRefExpr([101]):int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) "pthread_create"; pthread_create (L54:C5-L54:C19), containing 2 tokens (pthread_create ( )
        CXCursor_UnaryOperator([112]):pthread_t * "";  (L54:C21-L54:C29), containing 3 tokens (& thread1 , )->
          CXCursor_DeclRefExpr([101]):pthread_t "thread1"; thread1 (L54:C22-L54:C29), containing 2 tokens (thread1 , )
        CXCursor_UnexposedExpr([100]):void *(*)(void *) "functionWithCriticalSection"; functionWithCriticalSection (L54:C35-L54:C62), containing 2 tokens (functionWithCriticalSection , )->
          CXCursor_UnexposedExpr([100]):void *(*)(int *) "functionWithCriticalSection"; functionWithCriticalSection (L54:C35-L54:C62), containing 2 tokens (functionWithCriticalSection , )->
            CXCursor_DeclRefExpr([101]):void *(int *) "functionWithCriticalSection"; functionWithCriticalSection (L54:C35-L54:C62), containing 2 tokens (functionWithCriticalSection , )
        CXCursor_UnexposedExpr([100]):void * "";  (L54:C63-L54:C66), containing 3 tokens (& v2 ) )->
          CXCursor_UnaryOperator([112]):int * "";  (L54:C63-L54:C66), containing 3 tokens (& v2 ) )->
            CXCursor_DeclRefExpr([101]):int "v2"; v2 (L54:C64-L54:C66), containing 2 tokens (v2 ) )
      CXCursor_CallExpr([103]):int "pthread_create"; pthread_create (L55:C5-L55:C67), containing 13 tokens (pthread_create ( & thread2 , NULL , functionWithCriticalSection , & v2 ) ; )->
        CXCursor_UnexposedExpr([100]):int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) "pthread_create"; pthread_create (L55:C5-L55:C19), containing 2 tokens (pthread_create ( )->
          CXCursor_DeclRefExpr([101]):int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) "pthread_create"; pthread_create (L55:C5-L55:C19), containing 2 tokens (pthread_create ( )
        CXCursor_UnaryOperator([112]):pthread_t * "";  (L55:C21-L55:C29), containing 3 tokens (& thread2 , )->
          CXCursor_DeclRefExpr([101]):pthread_t "thread2"; thread2 (L55:C22-L55:C29), containing 2 tokens (thread2 , )
        CXCursor_UnexposedExpr([100]):void *(*)(void *) "functionWithCriticalSection"; functionWithCriticalSection (L55:C35-L55:C62), containing 2 tokens (functionWithCriticalSection , )->
          CXCursor_UnexposedExpr([100]):void *(*)(int *) "functionWithCriticalSection"; functionWithCriticalSection (L55:C35-L55:C62), containing 2 tokens (functionWithCriticalSection , )->
            CXCursor_DeclRefExpr([101]):void *(int *) "functionWithCriticalSection"; functionWithCriticalSection (L55:C35-L55:C62), containing 2 tokens (functionWithCriticalSection , )
        CXCursor_UnexposedExpr([100]):void * "";  (L55:C63-L55:C66), containing 3 tokens (& v2 ) )->
          CXCursor_UnaryOperator([112]):int * "";  (L55:C63-L55:C66), containing 3 tokens (& v2 ) )->
            CXCursor_DeclRefExpr([101]):int "v2"; v2 (L55:C64-L55:C66), containing 2 tokens (v2 ) )
      CXCursor_CallExpr([103]):int "sem_wait"; sem_wait (L56:C5-L56:C19), containing 6 tokens (sem_wait ( & sem ) ; )->
        CXCursor_UnexposedExpr([100]):int (*)(sem_t *) "sem_wait"; sem_wait (L56:C5-L56:C13), containing 2 tokens (sem_wait ( )->
          CXCursor_DeclRefExpr([101]):int (sem_t *) "sem_wait"; sem_wait (L56:C5-L56:C13), containing 2 tokens (sem_wait ( )
        CXCursor_UnaryOperator([112]):sem_t * "";  (L56:C14-L56:C18), containing 3 tokens (& sem ) )->
          CXCursor_DeclRefExpr([101]):sem_t "sem"; sem (L56:C15-L56:C18), containing 2 tokens (sem ) )
      CXCursor_CallExpr([103]):int "sem_wait"; sem_wait (L57:C5-L57:C19), containing 6 tokens (sem_wait ( & sem ) ; )->
        CXCursor_UnexposedExpr([100]):int (*)(sem_t *) "sem_wait"; sem_wait (L57:C5-L57:C13), containing 2 tokens (sem_wait ( )->
          CXCursor_DeclRefExpr([101]):int (sem_t *) "sem_wait"; sem_wait (L57:C5-L57:C13), containing 2 tokens (sem_wait ( )
        CXCursor_UnaryOperator([112]):sem_t * "";  (L57:C14-L57:C18), containing 3 tokens (& sem ) )->
          CXCursor_DeclRefExpr([101]):sem_t "sem"; sem (L57:C15-L57:C18), containing 2 tokens (sem ) )
      CXCursor_CallExpr([103]):int "pthread_mutex_destroy"; pthread_mutex_destroy (L58:C5-L58:C40), containing 10 tokens (pthread_mutex_destroy ( & ( sip -> lock ) ) ; )->
        CXCursor_UnexposedExpr([100]):int (*)(pthread_mutex_t *) "pthread_mutex_destroy"; pthread_mutex_destroy (L58:C5-L58:C26), containing 2 tokens (pthread_mutex_destroy ( )->
          CXCursor_DeclRefExpr([101]):int (pthread_mutex_t *) "pthread_mutex_destroy"; pthread_mutex_destroy (L58:C5-L58:C26), containing 2 tokens (pthread_mutex_destroy ( )
        CXCursor_UnaryOperator([112]):pthread_mutex_t * "";  (L58:C27-L58:C39), containing 7 tokens (& ( sip -> lock ) ) )->
          CXCursor_ParenExpr([111]):pthread_mutex_t "";  (L58:C28-L58:C39), containing 6 tokens (( sip -> lock ) ) )->
            CXCursor_MemberRefExpr([102]):pthread_mutex_t "lock"; lock (L58:C29-L58:C38), containing 4 tokens (sip -> lock ) )->
              CXCursor_UnexposedExpr([100]):SharedInt * "sip"; sip (L58:C29-L58:C32), containing 2 tokens (sip -> )->
                CXCursor_DeclRefExpr([101]):SharedInt * "sip"; sip (L58:C29-L58:C32), containing 2 tokens (sip -> )
      CXCursor_CallExpr([103]):int "sem_destroy"; sem_destroy (L59:C5-L59:C22), containing 6 tokens (sem_destroy ( & sem ) ; )->
        CXCursor_UnexposedExpr([100]):int (*)(sem_t *) "sem_destroy"; sem_destroy (L59:C5-L59:C16), containing 2 tokens (sem_destroy ( )->
          CXCursor_DeclRefExpr([101]):int (sem_t *) "sem_destroy"; sem_destroy (L59:C5-L59:C16), containing 2 tokens (sem_destroy ( )
        CXCursor_UnaryOperator([112]):sem_t * "";  (L59:C17-L59:C21), containing 3 tokens (& sem ) )->
          CXCursor_DeclRefExpr([101]):sem_t "sem"; sem (L59:C18-L59:C21), containing 2 tokens (sem ) )
      CXCursor_CallExpr([103]):int "printf"; printf (L60:C5-L60:C31), containing 9 tokens (printf ( "%d\n" , sip -> value ) ; )->
        CXCursor_UnexposedExpr([100]):int (*)(const char *, ...) "printf"; printf (L60:C5-L60:C11), containing 2 tokens (printf ( )->
          CXCursor_DeclRefExpr([101]):int (const char *, ...) "printf"; printf (L60:C5-L60:C11), containing 2 tokens (printf ( )
        CXCursor_UnexposedExpr([100]):const char * "";  (L60:C12-L60:C18), containing 2 tokens ("%d\n" , )->
          CXCursor_UnexposedExpr([100]):char * "";  (L60:C12-L60:C18), containing 2 tokens ("%d\n" , )->
            CXCursor_StringLiteral([109]):char [4] ""%d\n""; "%d\n" (L60:C12-L60:C18), containing 2 tokens ("%d\n" , )
        CXCursor_UnexposedExpr([100]):int "value"; value (L60:C20-L60:C30), containing 4 tokens (sip -> value ) )->
          CXCursor_MemberRefExpr([102]):int "value"; value (L60:C20-L60:C30), containing 4 tokens (sip -> value ) )->
            CXCursor_UnexposedExpr([100]):SharedInt * "sip"; sip (L60:C20-L60:C23), containing 2 tokens (sip -> )->
              CXCursor_DeclRefExpr([101]):SharedInt * "sip"; sip (L60:C20-L60:C23), containing 2 tokens (sip -> )
      CXCursor_ReturnStmt([214]): "";  (L61:C5-L61:C13), containing 3 tokens (return 0 ; )->
        CXCursor_IntegerLiteral([106]):int "";  (L61:C12-L61:C13), containing 2 tokens (0 ; )

Error Code: 0
Total nodes: 3083
Maximum depth: 7
